clear all;clc;
%% parameters
n_M=3;              %number of wires at each surface
dis_M=0.5;          %spacing of wires
Z=1.120998e-3/2.975567e-6;
xmin=-(n_M-1)*dis_M/2;xmax=(n_M-1)*dis_M/2;
[X Y Z] = meshgrid(xmin:dis_M:xmax,xmin:dis_M:xmax,xmin:dis_M:xmax); 
n_POS=0;
n_G=0;
for n1=1:n_M
    for n2=1:n_M
        for n3=1:n_M
            if( (X(n1,n2,n3)==xmin) ||(X(n1,n2,n3)==xmax) || (Y(n1,n2,n3)==xmin) ||(Y(n1,n2,n3)==xmax) || (Z(n1,n2,n3)==xmin) ||(Z(n1,n2,n3)==xmax))
                n_POS=n_POS+1;
                pos(n_POS,1)=X(n1,n2,n3);pos(n_POS,2)=Y(n1,n2,n3);pos(n_POS,3)=Z(n1,n2,n3); %coordinates of node
                n_G(n1,n2,n3)=n_POS;
            end
        end
    end
end
n_Line=0;
for n1=1:n_M
    for n2=1:n_M
        for n3=1:n_M
            %n1 n2 n3 i.e. index of( x y z )
            %This code is used to determine the global nodes of a wire
            if( (X(n1,n2,n3)==xmin) ||(X(n1,n2,n3)==xmax)  )
                if( (n1+1)<=n_M )
                    n_Line=n_Line+1;       
                    Line(n_Line,1)=n_G(n1,n2,n3);Line(n_Line,2)=n_G(n1+1,n2,n3);
                end
                if( (n3+1)<=n_M )
                    n_Line=n_Line+1;
                    Line(n_Line,1)=n_G(n1,n2,n3);Line(n_Line,2)=n_G(n1,n2,n3+1);
                end
            end
            
            if( (Y(n1,n2,n3)==xmin) ||(Y(n1,n2,n3)==xmax)  )
                if( (n2+1)<=n_M )
                    n_Line=n_Line+1;
                    Line(n_Line,1)=n_G(n1,n2,n3);Line(n_Line,2)=n_G(n1,n2+1,n3);
                end
                if( (n3+1)<=n_M )
                    n_Line=n_Line+1;
                    Line(n_Line,1)=n_G(n1,n2,n3);Line(n_Line,2)=n_G(n1,n2,n3+1);
                end
            end

            if( (Z(n1,n2,n3)==xmin) ||(Z(n1,n2,n3)==xmax)  )
                if( (n2+1)<=n_M )
                    n_Line=n_Line+1;
                    Line(n_Line,1)=n_G(n1,n2,n3);Line(n_Line,2)=n_G(n1,n2+1,n3);
                end
                if( (n1+1)<=n_M )
                    n_Line=n_Line+1;
                    Line(n_Line,1)=n_G(n1,n2,n3);Line(n_Line,2)=n_G(n1+1,n2,n3);
                end
            end

        end
    end
end

n_i0=0;     %The data generated by the code above has duplicate wires, delete duplicates
for n1=1:n_Line
    fit0=Line(n1,1:2);
    for n2=n1+1:n_Line
        if( (fit0(1,1)==Line(n2,1))&&(fit0(1,2)==Line(n2,2)))
            n_i0=n_i0+1;
            id(n_i0)=n2;
        end
    end
end
Line(id,:)=[];n_Line=size(Line,1);     %The data generated by the code above has duplicate wires, delete duplicates
%% coneplot Drawing
h1=figure(1);
xlabel('{\it\bfX}{\rm\bf/m}','fontsize',28,'fontweight','b','FontName','Times New Roman');
ylabel('{\it\bfY}{\rm\bf/m}','fontsize',28,'fontweight','b','FontName','Times New Roman');
zlabel('{\it\bfZ}{\rm\bf/m}','fontsize',28,'fontweight','b','FontName','Times New Roman');
set(gcf, 'renderer', 'zbuffer');
set(gcf,'color','white')
% axis off;grid on;
axis equal;
alpha(0.2)
hold on
L=1:size(pos,1);
scatter3(pos(:,1),pos(:,2),pos(:,3),210,'filled');                  %coordinates of node


for n1=1:n_Line
plot3 (pos([Line(n1,1) Line(n1,2)],1),pos([Line(n1,1) Line(n1,2)],2),pos([Line(n1,1) Line(n1,2)],3),'color','G','linewidth',6)      %wires
pos_L(n1,1)=(pos(Line(n1,1),1)+pos(Line(n1,2),1))*0.5;
pos_L(n1,2)=(pos(Line(n1,1),2)+pos(Line(n1,2),2))*0.5;
pos_L(n1,3)=(pos(Line(n1,1),3)+pos(Line(n1,2),3))*0.5;
end
L_l=1:size(pos_L,1);
camlight, lighting gouraud
warning('off','MATLAB:HandleGraphics:ObsoletedProperty:JavaFrame');	
jFrame = get(h1,'JavaFrame');	
pause(0.1);					
set(jFrame,'Maximized',1);	
pause(0.1);					
warning('on','MATLAB:HandleGraphics:ObsoletedProperty:JavaFrame');		
text(0,0,0,'Qian Yang (Xidian)','fontsize',24,'fontweight','b','FontName','Times New Roman')    
view(140,10)
 
filename='Wire_Parameters_U.txt';           %save
fid = fopen(filename,'w');
fprintf(fid,'%G \t\n ',n_POS);
fclose(fid);
dlmwrite(filename,pos,'-append','delimiter',' ');
fid = fopen(filename,'a');
fprintf(fid,'%G \t\n ',n_Line);
fclose(fid);
dlmwrite(filename,Line,'-append','delimiter',' ');